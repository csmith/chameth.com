.about {
  // Centers the trading card when it's not floated
  text-align: center;

  * {
    text-align: left;
  }

  & > :last-child {
    flex: 100%;
    margin-right: var(--small-space);
    padding-top: var(--small-space);

    @media (max-width: 500px) {
      margin-right: 0;
    }

    p:first-child {
      margin-top: var(--small-space);
      margin-bottom: var(--small-space);
      font-size: var(--font-size-large);
      line-height: 1.8em;
    }

    .drop {
      color: var(--text-highlight-colour);
      font-weight: 800;
      font-size: var(--font-size-xlarge);
    }

    li {
      font-size: var(--font-size-regular);
    }

    .interests {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      grid-row-gap: var(--small-space);
    }
  }
}

.tcg-outer {
  float: right;
  position: relative;
  width: min-content;

  transform: rotate(4deg) translateY(40px);
  margin-left: var(--medium-space);
  margin-bottom: var(--medium-space);

  @media (max-width: 1200px) {
    float: none;
    margin-bottom: var(--large-space);
    margin-left: auto;
    margin-right: auto;
  }

  @media (max-width: 800px) {
    transform: rotate(0deg);
  }

  @media (max-width: 500px) {
    margin-bottom: 0;
  }

  .tcg-front {
    transform: rotateY(0deg);
  }

  .tcg-back {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transform: rotateY(180deg);
    background-color: var(--accent-colour);

    .tcg-back-emboss {
      position: absolute;
      font-size: var(--font-size-xlarge);
      top: 30%;
      left: 0;
      width: 100%;
      text-align: center;
      text-transform: uppercase;
      font-weight: bolder;
      color: color-mix(in srgb, var(--accent-colour), black 20%);
    }

    .tcg-back-hello {
      position: absolute;
      margin: 0;
      bottom: 0;
      right: 0;
      font-size: var(--font-size-tiny);
      color: color-mix(in srgb, var(--accent-colour), black 20%);
    }
  }

  .tcg-flip {
    transform-style: preserve-3d;
    transition: transform 800ms 400ms;
  }

  &:hover .tcg-flip {
    transform: rotateY(180deg);
  }

  .tcg-front, .tcg-back {
    // Firefox doesn't do anti-aliasing in a 3D context, which looks terrible
    // as the card is rotated a bit. Adding a transparent outline somehow
    // fixes it. https://stackoverflow.com/a/9333891
    outline: 1px solid transparent;
    border: 12px solid var(--accent-colour);
    border-radius: var(--border-radius);
    box-shadow: 20px 20px 5px black;
    backface-visibility: hidden;

    @media (max-width: 500px) {
      box-shadow: 10px 10px 5px black;
    }

    &::before {
      position: absolute;
      top: -12px;
      left: -12px;
      right: -12px;
      bottom: -12px;
      content: ' ';
      border-radius: var(--border-radius);

      transform: translateZ(1.41px);
      overflow: hidden;

      background-image: radial-gradient(
                      farthest-corner circle at 300px 400px,
                      hsla(0, 0%, 100%, 0.8) 10%,
                      hsla(0, 0%, 100%, 0.65) 20%,
                      hsla(0, 0%, 0%, 0.5) 90%
      );

      mix-blend-mode: overlay;
    }
  }

  .tcg-inner {
    width: 300px;
    margin: -4px;
    background-color: var(--background-alt-colour);
    border-radius: var(--border-radius);
    overflow: hidden;

    display: flex;
    flex-direction: column;
    align-items: center;

    font-size: var(--font-size-tiny);

    img {
      width: 100%;
      border-bottom: 6px solid var(--accent-colour);
    }

    .tcg-properties {
      width: 100%;
      display: grid;
      grid-template-columns: auto 1fr auto 1fr;
      padding: 10px;
      grid-column-gap: var(--small-space);
      align-items: baseline;

      dt {
        font-weight: bold;
        text-align: right;
      }
    }

    .tcg-skills {
      margin: 0 10px;
      // Safari doesn't like to calculate the width properly by itself...?
      max-width: calc(100% - 20px);
      border-bottom: 0;

      td {
        border: 0;
        padding: 4px;
        font-size: var(--font-size-tiny);

        &:first-child {
          // Types
          text-align: center;
        }
      }

      em {
        font-style: normal;
        font-weight: bold;

        // The global style adds underscores around emphasis, but we don't want that here
        &::before {
          display: none;
        }

        &::after {
          display: none;
        }
      }
    }

    footer {
      width: 100%;
      border-top: 2px solid var(--accent-colour);
      margin-top: 10px;
      padding: 5px 10px 5px 10px;
      font-size: var(--font-size-tiny);
      font-style: italic;
      display: flex;
      justify-content: right;
    }
  }
}

.expandy {
  position: relative;
  display: inline-block;
  margin-right: -4px;

  span {
    text-decoration: underline;
    text-decoration-skip-ink: none;
    text-decoration-color: var(--accent-colour);
    text-decoration-thickness: 1px;
    text-decoration-style: wavy;
    cursor: help;
  }

  .popup {
    position: absolute;
    display: none;
    top: calc(2em);
    left: calc(100% + 25px);
    z-index: 100;
    transition: display 300s;
    transition-property: allow-discrete;

    div {
      transition: opacity 100ms;
      background-color: var(--accent-colour);
      padding: var(--medium-space);
      min-width: 400px;
      border-radius: 20px;

      ul {
        margin-top: var(--medium-space);
      }
    }

    &::before, &::after {
      content: '';
      display: block;
      position: absolute;
      border-radius: 100%;
      background-color: var(--accent-colour);
    }

    &::before {
      width: 15px;
      height: 15px;
      top: -20px;
      left: -30px;
      transition: opacity 100ms 200ms;
    }

    &::after {
      width: 20px;
      height: 20px;
      top: -10px;
      left: -15px;
      transition: opacity 100ms 100ms;
    }
  }

  &:has(span:hover), &:has(span:focus) {
    .popup {
      display: block;

      div { transition: opacity 100ms 300ms; }
      &::before { transition: opacity 100ms; }
      &::after { transition: opacity 100ms 150ms; }
    }
  }
}

@starting-style {
  .expandy .popup {
    &::before, &::after, div {
      opacity: 0;
    }
  }
}

.recent-posts {
  padding-top: var(--medium-space);
  display: grid;
  grid-auto-rows: 1fr;
  gap: var(--medium-space);

  article {
    display: grid;
    grid-template-areas:
            "img . header"
            "img . summary";
    grid-template-columns: 250px var(--medium-space) 1fr;
    grid-template-rows: auto 1fr;

    @media (max-width: 500px) {
      grid-template-columns: 100px var(--small-space) 1fr;
    }

    a {
      grid-area: img;

      &:has(img):hover {
        background: none;
        img {
          border-radius: 0;
        }
      }

      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: var(--border-radius);
        transition: border-radius 200ms ease-in-out;
        border: 2px solid var(--accent-colour);
      }
    }

    h2 {
      margin: 0;
      grid-area: header;
      font-size: var(--font-size-large);

      &::before {
        display: none;
      }
    }

    p {
      grid-area: summary;
      font-size: var(--font-size-small);
    }
  }
}